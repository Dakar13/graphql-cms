type User {
    id: UUID!
    username: String!
    password: String!
    email: String!
    privilege: String!
    active: Boolean!
    createdAt: Datatime!
    updatedAt: Datatime!
    posts: [Post!]
}

type Query {
    getUsers: [User!]
}

type Mutation {
    addUser(input: AddUserInput): User!
    login(input: LoginInput): AuthPayload!
}

input AddUserInput {
    username: String!,
    password: String!,
    email: String!
}

input LoginInput {
    email: String!,
    password: String!
}

type AuthPayload {
    token: String!
}